is_clinvar_gene,
clinvar_pheno,
# blacklisted regions & reported issues
hg19_blacklist_reason,
hg19_issue,
hg38_blacklist_reason,
hg38_issue,
chm13_blacklist_reason,
chm13_issue,
# build change notations
build_change_hg19_hg38 = build_change_h38_hg19,
build_change_hg38_chm13,
# Expression info
tissue,
hg19_n_samples_expressed = n_samples_expressed_hg19,
hg19_median_tpm_expressed = median_tpm_expressed_hg19,
hg19_prop_mean_multimapped = prop_mean_multimapped_hg19,
hg38_n_samples_expressed = n_samples_expressed_hg38,
hg38_median_tpm_expressed = median_tpm_expressed_hg38,
hg38_prop_mean_multimapped = prop_mean_multimapped_hg38,
chm13_n_samples_expressed = n_samples_expressed_chm13,
chm13_median_tpm_expressed = median_tpm_expressed_chm13,
chm13_prop_mean_multimapped = prop_mean_multimapped_chm13,
# hg19 vs hg38
## annotation comparison
hg19_hg38_is_annotation_specific = hg19_hg38.annotation_specific,
hg19_hg38_annotation_comparison,
hg19_hg38_gene_model_comparison,
hg38_hg19_gene_similarity,
## differential quantification
hg19_hg38_is_diffquant = hg19_hg38.is_diffquant,
hg38_hg19_logFC = logFC_hg38_hg19,
hg38_hg19_adj_pval = adj_pval_hg38_hg19,
## build-exclusive expression
hg19_hg38_is_build_exclusive = hg19_hg38.build_exclusive,
# hg38 vs chm13
## annotation comparison
hg38_chm13_is_annotation_specific = hg38_chm13.annotation_specific,
hg38_chm13_annotation_comparison,
hg38_chm13_gene_model_comparison,
hg38_chm13_gene_similarity = chm13_hg38_gene_similarity,
## differential quantification
hg38_chm13_is_diffquant = hg38_chm13.is_diffquant,
hg38_chm13_logFC = logFC_chm13_hg38,
hg38_chm13_adj_pval = adj_pval_chm13_hg38,
## build-exclusive expression
hg38_chm13_is_build_exclusive_to = hg38_chm13.build_exclusive
) %>%
mutate(is_medically_relevant = ifelse(is_medically_relevant==1, 1, 0),
is_omim_gene = ifelse(is_omim_gene==1, 1, 0),
is_clinvar_gene = ifelse(is_medically_relevant==1, 1, 0))
table_s1 = main_table_cleaned %>%
mutate(hg19_hg38.is_build_dep = ifelse( (hg19_hg38.annotation_specific == "hg19" &
!is.na(median_tpm_expressed_hg19)) |
(hg19_hg38.annotation_specific == "hg38" &
!is.na(median_tpm_expressed_hg38)) |
!is.na(hg19_hg38.build_exclusive) |
hg19_hg38.is_diffquant == 1, 1, 0)) %>%
mutate(hg38_chm13.is_build_dep = ifelse( (hg38_chm13.annotation_specific == "chm13" &
!is.na(median_tpm_expressed_hg19)) |
(hg38_chm13.annotation_specific == "hg38" &
!is.na(median_tpm_expressed_hg38)) |
!is.na(hg38_chm13.build_exclusive) |
hg38_chm13.is_diffquant == 1, 1, 0)) %>%
mutate(is_build_dep = ifelse(hg19_hg38.is_build_dep == 1 | hg38_chm13.is_build_dep == 1, 1, 0)) %>%
filter(is_build_dep == 1) %>%
# create cleaner hg38 vs chm13 build change column
rowwise() %>%
mutate(build_change_hg38_chm13 = paste0(unique(na.omit(c(ifelse(build_change_chm13uniqregion==1 & !str_detect(build_change_chm13_hg38_medically_relevant_genes, "Nonsyntenic"), "Nonsyntenic_CHM13, novel_CHM13", NA), build_change_chm13_hg38_medically_relevant_genes), collapse = ", ")))) %>%
dplyr::select(# gene ID info
gene_name,
gene_id,
gene_id_from,
starts_with("gene_version"),
featBiotype,
# disease relevance annotations
is_medically_relevant,
is_omim_gene,
omim_pheno,
is_opentargets_gene,
top_opentargets_pheno,
top_opentargets_score,
is_cancer_gene,
cosmic_cancer_syndrome,
is_clinvar_gene,
clinvar_pheno,
# blacklisted regions & reported issues
hg19_blacklist_reason,
hg19_issue,
hg38_blacklist_reason,
hg38_issue,
chm13_blacklist_reason,
chm13_issue,
# build change notations
build_change_hg19_hg38 = build_change_h38_hg19,
build_change_hg38_chm13,
# Expression info
tissue,
hg19_n_samples_expressed = n_samples_expressed_hg19,
hg19_median_tpm_expressed = median_tpm_expressed_hg19,
hg19_prop_mean_multimapped = prop_mean_multimapped_hg19,
hg38_n_samples_expressed = n_samples_expressed_hg38,
hg38_median_tpm_expressed = median_tpm_expressed_hg38,
hg38_prop_mean_multimapped = prop_mean_multimapped_hg38,
chm13_n_samples_expressed = n_samples_expressed_chm13,
chm13_median_tpm_expressed = median_tpm_expressed_chm13,
chm13_prop_mean_multimapped = prop_mean_multimapped_chm13,
# hg19 vs hg38
## annotation comparison
hg19_hg38_is_annotation_specific = hg19_hg38.annotation_specific,
hg19_hg38_annotation_comparison,
hg19_hg38_gene_model_comparison,
hg38_hg19_gene_similarity,
## differential quantification
hg19_hg38_is_diffquant = hg19_hg38.is_diffquant,
hg38_hg19_logFC = logFC_hg38_hg19,
hg38_hg19_adj_pval = adj_pval_hg38_hg19,
## build-exclusive expression
hg19_hg38_is_build_exclusive = hg19_hg38.build_exclusive,
# hg38 vs chm13
## annotation comparison
hg38_chm13_is_annotation_specific = hg38_chm13.annotation_specific,
hg38_chm13_annotation_comparison,
hg38_chm13_gene_model_comparison,
hg38_chm13_gene_similarity = chm13_hg38_gene_similarity,
## differential quantification
hg38_chm13_is_diffquant = hg38_chm13.is_diffquant,
hg38_chm13_logFC = logFC_chm13_hg38,
hg38_chm13_adj_pval = adj_pval_chm13_hg38,
## build-exclusive expression
hg38_chm13_is_build_exclusive_to = hg38_chm13.build_exclusive
) %>%
mutate(is_medically_relevant = ifelse(is_medically_relevant==1, 1, 0),
is_omim_gene = ifelse(is_omim_gene==1, 1, 0),
is_clinvar_gene = ifelse(is_medically_relevant==1, 1, 0))
na.omit(c('a', 1,2, NA, 4))
na.omit('a', 1,2, NA, 4)
na.omit(c('a', 1,2, NA, 4))
na.omit(NA)
na.omit(c('a', 1,2, 4))
paste0(c("", 1, NA, "a", "b"), collapse= ", ")
paste0(c("a", 1, NA, "a", "b"), collapse= ", ")
paste0(na.omit(c("a", 1, NA, "a", "b")), collapse= ", ")
paste0(na.omit(unique(c("a", 1, NA, "a", NA, "b")), collapse= ", ")
)
paste0(na.omit(unique(c("a", 1, NA, "a", NA, "b"))), collapse= ", ")
table_s1 = main_table_cleaned %>%
)
table_s1 = main_table_cleaned %>%
mutate(hg19_hg38.is_build_dep = ifelse( (hg19_hg38.annotation_specific == "hg19" &
!is.na(median_tpm_expressed_hg19)) |
(hg19_hg38.annotation_specific == "hg38" &
!is.na(median_tpm_expressed_hg38)) |
!is.na(hg19_hg38.build_exclusive) |
hg19_hg38.is_diffquant == 1, 1, 0)) %>%
mutate(hg38_chm13.is_build_dep = ifelse( (hg38_chm13.annotation_specific == "chm13" &
!is.na(median_tpm_expressed_hg19)) |
(hg38_chm13.annotation_specific == "hg38" &
!is.na(median_tpm_expressed_hg38)) |
!is.na(hg38_chm13.build_exclusive) |
hg38_chm13.is_diffquant == 1, 1, 0)) %>%
mutate(is_build_dep = ifelse(hg19_hg38.is_build_dep == 1 | hg38_chm13.is_build_dep == 1, 1, 0)) %>%
filter(is_build_dep == 1) %>%
# create cleaner hg38 vs chm13 build change column
rowwise() %>%
mutate(build_change_hg38_chm13 = ifelse(
build_change_chm13uniqregion==1 & !str_detect(build_change_chm13_hg38_medically_relevant_genes, "Nonsyntenic"),
"Nonsyntenic_CHM13, novel_CHM13", NA)) %>%
mutate(build_change_hg38_chm13 = paste0(na.omit(unique(c(build_change_chm13uniqregion, build_change_chm13_hg38_medically_relevant_genes))), collapse = ", ")) %>%
dplyr::select(# gene ID info
gene_name,
gene_id,
gene_id_from,
starts_with("gene_version"),
featBiotype,
# disease relevance annotations
is_medically_relevant,
is_omim_gene,
omim_pheno,
is_opentargets_gene,
top_opentargets_pheno,
top_opentargets_score,
is_cancer_gene,
cosmic_cancer_syndrome,
is_clinvar_gene,
clinvar_pheno,
# blacklisted regions & reported issues
hg19_blacklist_reason,
hg19_issue,
hg38_blacklist_reason,
hg38_issue,
chm13_blacklist_reason,
chm13_issue,
# build change notations
build_change_hg19_hg38 = build_change_h38_hg19,
build_change_hg38_chm13,
# Expression info
tissue,
hg19_n_samples_expressed = n_samples_expressed_hg19,
hg19_median_tpm_expressed = median_tpm_expressed_hg19,
hg19_prop_mean_multimapped = prop_mean_multimapped_hg19,
hg38_n_samples_expressed = n_samples_expressed_hg38,
hg38_median_tpm_expressed = median_tpm_expressed_hg38,
hg38_prop_mean_multimapped = prop_mean_multimapped_hg38,
chm13_n_samples_expressed = n_samples_expressed_chm13,
chm13_median_tpm_expressed = median_tpm_expressed_chm13,
chm13_prop_mean_multimapped = prop_mean_multimapped_chm13,
# hg19 vs hg38
## annotation comparison
hg19_hg38_is_annotation_specific = hg19_hg38.annotation_specific,
hg19_hg38_annotation_comparison,
hg19_hg38_gene_model_comparison,
hg38_hg19_gene_similarity,
## differential quantification
hg19_hg38_is_diffquant = hg19_hg38.is_diffquant,
hg38_hg19_logFC = logFC_hg38_hg19,
hg38_hg19_adj_pval = adj_pval_hg38_hg19,
## build-exclusive expression
hg19_hg38_is_build_exclusive = hg19_hg38.build_exclusive,
# hg38 vs chm13
## annotation comparison
hg38_chm13_is_annotation_specific = hg38_chm13.annotation_specific,
hg38_chm13_annotation_comparison,
hg38_chm13_gene_model_comparison,
hg38_chm13_gene_similarity = chm13_hg38_gene_similarity,
## differential quantification
hg38_chm13_is_diffquant = hg38_chm13.is_diffquant,
hg38_chm13_logFC = logFC_chm13_hg38,
hg38_chm13_adj_pval = adj_pval_chm13_hg38,
## build-exclusive expression
hg38_chm13_is_build_exclusive_to = hg38_chm13.build_exclusive
) %>%
mutate(is_medically_relevant = ifelse(is_medically_relevant==1, 1, 0),
is_omim_gene = ifelse(is_omim_gene==1, 1, 0),
is_clinvar_gene = ifelse(is_medically_relevant==1, 1, 0))
table_s1 = main_table_cleaned %>%
mutate(hg19_hg38.is_build_dep = ifelse( (hg19_hg38.annotation_specific == "hg19" &
!is.na(median_tpm_expressed_hg19)) |
(hg19_hg38.annotation_specific == "hg38" &
!is.na(median_tpm_expressed_hg38)) |
!is.na(hg19_hg38.build_exclusive) |
hg19_hg38.is_diffquant == 1, 1, 0)) %>%
mutate(hg38_chm13.is_build_dep = ifelse( (hg38_chm13.annotation_specific == "chm13" &
!is.na(median_tpm_expressed_hg19)) |
(hg38_chm13.annotation_specific == "hg38" &
!is.na(median_tpm_expressed_hg38)) |
!is.na(hg38_chm13.build_exclusive) |
hg38_chm13.is_diffquant == 1, 1, 0)) %>%
mutate(is_build_dep = ifelse(hg19_hg38.is_build_dep == 1 | hg38_chm13.is_build_dep == 1, 1, 0)) %>%
filter(is_build_dep == 1) %>%
# create cleaner hg38 vs chm13 build change column
rowwise() %>%
mutate(build_change_hg38_chm13 = ifelse(
build_change_chm13uniqregion==1 & !str_detect(build_change_chm13_hg38_medically_relevant_genes, "Nonsyntenic"),
"Nonsyntenic_CHM13, novel_CHM13", NA)) %>%
mutate(build_change_hg38_chm13 = paste0(na.omit(unique(c(build_change_chm13uniqregion, build_change_chm13_hg38_medically_relevant_genes))), collapse = ", ")) %>%
dplyr::select(# gene ID info
gene_name,
gene_id,
gene_id_from,
starts_with("gene_version"),
featBiotype,
# disease relevance annotations
is_medically_relevant,
is_omim_gene,
omim_pheno,
is_opentargets_gene,
top_opentargets_pheno,
top_opentargets_score,
is_cancer_gene,
cosmic_cancer_syndrome,
is_clinvar_gene,
clinvar_pheno,
# blacklisted regions & reported issues
hg19_blacklist_reason,
hg19_issue,
hg38_blacklist_reason,
hg38_issue,
chm13_blacklist_reason,
chm13_issue,
# build change notations
build_change_hg19_hg38 = build_change_h38_hg19,
build_change_hg38_chm13,
# Expression info
tissue,
hg19_n_samples_expressed = n_samples_expressed_hg19,
hg19_median_tpm_expressed = median_tpm_expressed_hg19,
hg19_prop_mean_multimapped = prop_mean_multimapped_hg19,
hg38_n_samples_expressed = n_samples_expressed_hg38,
hg38_median_tpm_expressed = median_tpm_expressed_hg38,
hg38_prop_mean_multimapped = prop_mean_multimapped_hg38,
chm13_n_samples_expressed = n_samples_expressed_chm13,
chm13_median_tpm_expressed = median_tpm_expressed_chm13,
chm13_prop_mean_multimapped = prop_mean_multimapped_chm13,
# hg19 vs hg38
## annotation comparison
hg19_hg38_is_annotation_specific = hg19_hg38.annotation_specific,
hg19_hg38_annotation_comparison,
hg19_hg38_gene_model_comparison,
hg38_hg19_gene_similarity,
## differential quantification
hg19_hg38_is_diffquant = hg19_hg38.is_diffquant,
hg38_hg19_logFC = logFC_hg38_hg19,
hg38_hg19_adj_pval = adj_pval_hg38_hg19,
## build-exclusive expression
hg19_hg38_is_build_exclusive = hg19_hg38.build_exclusive,
# hg38 vs chm13
## annotation comparison
hg38_chm13_is_annotation_specific = hg38_chm13.annotation_specific,
hg38_chm13_annotation_comparison,
hg38_chm13_gene_model_comparison,
hg38_chm13_gene_similarity = chm13_hg38_gene_similarity,
## differential quantification
hg38_chm13_is_diffquant = hg38_chm13.is_diffquant,
hg38_chm13_logFC = logFC_chm13_hg38,
hg38_chm13_adj_pval = adj_pval_chm13_hg38,
## build-exclusive expression
hg38_chm13_is_build_exclusive_to = hg38_chm13.build_exclusive
) %>%
mutate(is_medically_relevant = ifelse(is.na(is_medically_relevant), 0, 1),
is_omim_gene = ifelse(is.na(is_omim_gene), 0, 1),
is_clinvar_gene = ifelse(is.na(is_clinvar_gene), 0, 1))
View(main_table_cleaned)
table_s1 = main_table_cleaned %>%
mutate(hg19_hg38.is_build_dep = ifelse( (hg19_hg38.annotation_specific == "hg19" &
!is.na(median_tpm_expressed_hg19)) |
(hg19_hg38.annotation_specific == "hg38" &
!is.na(median_tpm_expressed_hg38)) |
!is.na(hg19_hg38.build_exclusive) |
hg19_hg38.is_diffquant == 1, 1, 0)) %>%
mutate(hg38_chm13.is_build_dep = ifelse( (hg38_chm13.annotation_specific == "chm13" &
!is.na(median_tpm_expressed_hg19)) |
(hg38_chm13.annotation_specific == "hg38" &
!is.na(median_tpm_expressed_hg38)) |
!is.na(hg38_chm13.build_exclusive) |
hg38_chm13.is_diffquant == 1, 1, 0)) %>%
mutate(is_build_dep = ifelse(hg19_hg38.is_build_dep == 1 | hg38_chm13.is_build_dep == 1, 1, 0)) %>%
filter(is_build_dep == 1) %>%
# create cleaner hg38 vs chm13 build change column
mutate(build_change_chm13uniqregion = ifelse(
build_change_chm13uniqregion == 1 & !str_detect(build_change_chm13_hg38_medically_relevant_genes, "Nonsyntenic"),
"Nonsyntenic_CHM13, novel_CHM13", NA)) %>%
mutate(build_change_hg38_chm13 = paste0(na.omit(unique(c(build_change_chm13uniqregion, build_change_chm13_hg38_medically_relevant_genes))), collapse = ", ")) %>%
dplyr::select(# gene ID info
gene_name,
gene_id,
gene_id_from,
starts_with("gene_version"),
featBiotype,
# disease relevance annotations
is_medically_relevant,
is_omim_gene,
omim_pheno,
is_opentargets_gene,
top_opentargets_pheno,
top_opentargets_score,
is_cancer_gene,
cosmic_cancer_syndrome,
is_clinvar_gene,
clinvar_pheno,
# blacklisted regions & reported issues
hg19_blacklist_reason,
hg19_issue,
hg38_blacklist_reason,
hg38_issue,
chm13_blacklist_reason,
chm13_issue,
# build change notations
build_change_hg19_hg38 = build_change_h38_hg19,
build_change_hg38_chm13,
# Expression info
tissue,
hg19_n_samples_expressed = n_samples_expressed_hg19,
hg19_median_tpm_expressed = median_tpm_expressed_hg19,
hg19_prop_mean_multimapped = prop_mean_multimapped_hg19,
hg38_n_samples_expressed = n_samples_expressed_hg38,
hg38_median_tpm_expressed = median_tpm_expressed_hg38,
hg38_prop_mean_multimapped = prop_mean_multimapped_hg38,
chm13_n_samples_expressed = n_samples_expressed_chm13,
chm13_median_tpm_expressed = median_tpm_expressed_chm13,
chm13_prop_mean_multimapped = prop_mean_multimapped_chm13,
# hg19 vs hg38
## annotation comparison
hg19_hg38_is_annotation_specific = hg19_hg38.annotation_specific,
hg19_hg38_annotation_comparison,
hg19_hg38_gene_model_comparison,
hg38_hg19_gene_similarity,
## differential quantification
hg19_hg38_is_diffquant = hg19_hg38.is_diffquant,
hg38_hg19_logFC = logFC_hg38_hg19,
hg38_hg19_adj_pval = adj_pval_hg38_hg19,
## build-exclusive expression
hg19_hg38_is_build_exclusive = hg19_hg38.build_exclusive,
# hg38 vs chm13
## annotation comparison
hg38_chm13_is_annotation_specific = hg38_chm13.annotation_specific,
hg38_chm13_annotation_comparison,
hg38_chm13_gene_model_comparison,
hg38_chm13_gene_similarity = chm13_hg38_gene_similarity,
## differential quantification
hg38_chm13_is_diffquant = hg38_chm13.is_diffquant,
hg38_chm13_logFC = logFC_chm13_hg38,
hg38_chm13_adj_pval = adj_pval_chm13_hg38,
## build-exclusive expression
hg38_chm13_is_build_exclusive_to = hg38_chm13.build_exclusive
) %>%
mutate(is_medically_relevant = ifelse(is.na(is_medically_relevant), 0, 1),
is_omim_gene = ifelse(is.na(is_omim_gene), 0, 1),
is_clinvar_gene = ifelse(is.na(is_clinvar_gene), 0, 1))
table_s1 = main_table_cleaned %>%
mutate(hg19_hg38.is_build_dep = ifelse( (hg19_hg38.annotation_specific == "hg19" &
!is.na(median_tpm_expressed_hg19)) |
(hg19_hg38.annotation_specific == "hg38" &
!is.na(median_tpm_expressed_hg38)) |
!is.na(hg19_hg38.build_exclusive) |
hg19_hg38.is_diffquant == 1, 1, 0)) %>%
mutate(hg38_chm13.is_build_dep = ifelse( (hg38_chm13.annotation_specific == "chm13" &
!is.na(median_tpm_expressed_hg19)) |
(hg38_chm13.annotation_specific == "hg38" &
!is.na(median_tpm_expressed_hg38)) |
!is.na(hg38_chm13.build_exclusive) |
hg38_chm13.is_diffquant == 1, 1, 0)) %>%
mutate(is_build_dep = ifelse(hg19_hg38.is_build_dep == 1 | hg38_chm13.is_build_dep == 1, 1, 0)) %>%
filter(is_build_dep == 1) %>%
# create cleaner hg38 vs chm13 build change column
mutate(build_change_chm13uniqregion = ifelse(
build_change_chm13uniqregion == 1 & !str_detect(build_change_chm13_hg38_medically_relevant_genes, "Nonsyntenic"),
"Nonsyntenic_CHM13, novel_CHM13", NA)) %>%
mutate(build_change_hg38_chm13 = paste0(na.omit(unique(c(build_change_chm13uniqregion, build_change_chm13_hg38_medically_relevant_genes))), collapse = ", ")) %>%
dplyr::select(# gene ID info
gene_name,
gene_id,
gene_id_from,
starts_with("gene_version"),
featBiotype,
# disease relevance annotations
is_medically_relevant,
is_omim_gene,
omim_pheno,
is_opentargets_gene,
top_opentargets_pheno,
top_opentargets_score,
is_cancer_gene,
cosmic_cancer_syndrome,
is_clinvar_gene,
clinvar_pheno,
# blacklisted regions & reported issues
hg19_blacklist_reason,
hg19_issue,
hg38_blacklist_reason,
hg38_issue,
chm13_blacklist_reason,
chm13_issue,
# build change notations
build_change_hg19_hg38 = build_change_h38_hg19,
build_change_hg38_chm13,
# Expression info
tissue,
hg19_n_samples_expressed = n_samples_expressed_hg19,
hg19_median_tpm_expressed = median_tpm_expressed_hg19,
hg19_prop_mean_multimapped = prop_mean_multimapped_hg19,
hg38_n_samples_expressed = n_samples_expressed_hg38,
hg38_median_tpm_expressed = median_tpm_expressed_hg38,
hg38_prop_mean_multimapped = prop_mean_multimapped_hg38,
chm13_n_samples_expressed = n_samples_expressed_chm13,
chm13_median_tpm_expressed = median_tpm_expressed_chm13,
chm13_prop_mean_multimapped = prop_mean_multimapped_chm13,
# hg19 vs hg38
## annotation comparison
hg19_hg38_is_annotation_specific = hg19_hg38.annotation_specific,
hg19_hg38_annotation_comparison,
hg19_hg38_gene_model_comparison,
hg38_hg19_gene_similarity,
## differential quantification
hg19_hg38_is_diffquant = hg19_hg38.is_diffquant,
hg38_hg19_logFC = logFC_hg38_hg19,
hg38_hg19_adj_pval = adj_pval_hg38_hg19,
## build-exclusive expression
hg19_hg38_is_build_exclusive = hg19_hg38.build_exclusive,
# hg38 vs chm13
## annotation comparison
hg38_chm13_is_annotation_specific = hg38_chm13.annotation_specific,
hg38_chm13_annotation_comparison,
hg38_chm13_gene_model_comparison,
hg38_chm13_gene_similarity = chm13_hg38_gene_similarity,
## differential quantification
hg38_chm13_is_diffquant = hg38_chm13.is_diffquant,
hg38_chm13_logFC = logFC_chm13_hg38,
hg38_chm13_adj_pval = adj_pval_chm13_hg38,
## build-exclusive expression
hg38_chm13_is_build_exclusive_to = hg38_chm13.build_exclusive
) %>%
mutate(is_medically_relevant = ifelse(is.na(is_medically_relevant), 0, 1),
is_omim_gene = ifelse(is.na(is_omim_gene), 0, 1),
is_clinvar_gene = ifelse(is.na(is_clinvar_gene), 0, 1)) %>%
# clean up the wonky PAR gene similarities
mutate(hg38_hg19_gene_similarity = ifelse(hg38_hg19_gene_similarity == 0.5, NA, hg38_hg19_gene_similarity))
write_tsv(table_s1, "/oak/stanford/groups/smontgom/shared/UDN/Analysis/ReferenceComparisonPrimary/supplementary_table1_build_dep_gene_annotations.tsv")
# remove wayward spaces after commas
table_s1 <- data.frame(lapply(table_s1, function(x) {gsub(", ", ",", x)}))
filter(table_s1, any(str_detect(" ")))
apply(df, 1, function(r) any(r %in% c(" ")))
apply(table_s1, 1, function(r) any(r %in% c(" ")))
table_s1[apply(table_s1, 1, function(r) any(r %in% c(" ")))]
write_tsv(table_s1, "/oak/stanford/groups/smontgom/shared/UDN/Analysis/ReferenceComparisonPrimary/supplementary_table1_build_dep_gene_annotations.tsv")
table_s1 <- data.frame(lapply(table_s1, function(x) {gsub(" ", "_", x)}))
write_tsv(table_s1, "/oak/stanford/groups/smontgom/shared/UDN/Analysis/ReferenceComparisonPrimary/supplementary_table1_build_dep_gene_annotations.tsv")
13806*51
13806/6
table_s1 %>% pull(gene_id) %>% n_distinct()
table_s1 %>% pull(gene_id) %>% na.omit() %>% n_distinct()
table_s1 %>% pull(gene_name) %>% na.omit() %>% n_distinct()
